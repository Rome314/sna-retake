version: '3.3'
services:
  fluentd:
    image: fluentd-influxdb
    build: ./fluentd
    links:
      - influxdb #fluent can't start untill database is not started
    networks:
      - external_network #access to external network, need for docker engine to send there logs
      - logging_stuff_network #access to database through network
    ports:
      - '24224:24224' #logs listening default port
      - '5140:5140/tcp' #ports that listen syslogs
      - '5140:5140/udp'
    volumes:
      - './fluentd/configs/:/fluentd/etc/' #config file mounting
  influxdb:
    image: influxdb:1.7.4
    ports:
      - '8086:8086' #database's default port
    networks:
      - logging_stuff_network #need to be accessable for fluent and chronograf
    env_file:
      - influx/influx.env #database configuration by environment variables
    volumes:
      - './influx/internal:/var/lib/influxdb' #need to restore data in case of restart
  chronograf:
    image: chronograf:latest
    links:
      - influxdb #chronograf can'n start without database
    networks:
      - logging_stuff_network #for accessing influx
      - applications_network #to be reachable by nginx
    env_file:
      - chronograf/chronograf.env #configuration by environment variables
    ports:
      - "8888:8888" #default port, but it's not accessable from public network
  nginx:
    image: nginx:latest
    ports:
      - "80:80" #listening port, default for http
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf #config file mounting
    networks:
      - applications_network # for accessing to flask app and chronograf
      - external_network # to be reachable from public network
    links:
      - fluentd # do not start before fluent
    restart: unless-stopped
    logging:
      driver: 'fluentd'
      options:
        tag: nginx
        fluentd-async-connect: 'true'
        fluentd-max-retries: '20'
  web:
    build: ./flask
    ports:
      - "3000:3000"
    networks:
      - applications_network # to be reachable by nginx
    links: # can not start before nginx and fluent
      - nginx
      - fluentd
    restart: unless-stopped
    logging:
      driver: 'fluentd'
      options:
        tag: python
        fluentd-async-connect: 'true'
        fluentd-max-retries: '20'

# networks describing
networks:
  logging_stuff_network:
    internal: true
    driver: bridge
  applications_network:
    internal: true
    driver: bridge
  external_network:
     #default network with internet access
